name: CI/CD Pipeline for Node.js App

on:
  push:
    branches:
      - main  # Trigger on push to the 'main' branch

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Check out the repository
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '18'

    - name: Install dependencies
      run: npm install

    #- name: Run tests (optional)
    # run: npm test

    #- name: Build the application (optional)
    # run: npm run build  # Add if you have a build script

  deploy:
    runs-on: ubuntu-latest
    environment: node-app
    needs: build  # Ensure this step runs after the 'build' job

    steps:
    - name: Check out the repository
      uses: actions/checkout@v2

    #- name: Install aws-cli
     # run: sudo apt-get install -y awscli
      
    - name: Set up AWS CLI
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Sync files with EC2
      run: |
        # Install the AWS CLI on the runner
        # sudo apt-get install -y awscli
        sudo pip3 install awscli 

        # Sync the project files from GitHub to EC2 using AWS S3 and EC2 instance
        # aws s3 sync ./ s3://your-s3-bucket-name/  # Optional: Sync to S3

        # SSH into EC2 (directly using EC2 public IP, AWS CLI, and a pre-installed EC2 instance role)
        aws ec2 describe-instances --instance-ids i-06f90411ca382143e --query "Reservations[].Instances[].PublicIpAddress" --output text > ec2-ip.txt
        EC2_IP=$(cat ec2-ip.txt)

        # Install Node.js and deploy the app on EC2 (Make sure EC2 has proper IAM roles)
        ssh -o StrictHostKeyChecking=no -i /path/to/your/private/key.pem ec2-user@$EC2_IP << 'EOF'
          cd /root/DevOps-Assignment/my-node-app
          git pull origin main
          npm install
          pm2 restart index.js  # Ensure your app is running with PM2
        EOF

    - name: Final deployment checks (optional)
      run: echo "Deployment successful"
